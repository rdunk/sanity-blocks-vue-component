{"version":3,"sources":["../src/blocksToVue.js"],"names":["objectAssign","require","blocksToNodes","getSerializers","isVueComponent","Object","hasOwnProperty","call","block","render","blocksToVue","createElement","options","renderNode","serializer","properties","children","data","tag","childNodes","Array","isArray","vueProps","sanityProps","mark","node","_sanityProps","props","defaultSerializers","serializeSpan","module","exports"],"mappings":";;AAAA,IAAMA,eAAeC,QAAQ,eAAR,CAArB;;eACwBA,QAAQ,gDAAR,C;IAAjBC,a,YAAAA,a;;AACP,IAAMC,iBAAiBF,QAAQ,eAAR,CAAvB;;AAEA,IAAMG,iBAAiB,SAAjBA,cAAiB;AAAA,SACrBC,OAAOC,cAAP,CAAsBC,IAAtB,CAA2BC,KAA3B,EAAkC,UAAlC,KACCH,OAAOC,cAAP,CAAsBC,IAAtB,CAA2BC,KAA3B,EAAkC,QAAlC,KAA+C,OAAOA,MAAMC,MAAb,KAAwB,UAFnD;AAAA,CAAvB;;AAIA,SAASC,WAAT,CAAqBC,aAArB,EAAoCC,OAApC,EAA6C;AAC3C,MAAMC,aAAa,SAAbA,UAAa,CAACC,UAAD,EAAaC,UAAb,EAAyBC,QAAzB,EAAsC;AACvD,QAAIC,OAAOF,cAAc,EAAzB;AACA,QAAI,OAAOD,UAAP,KAAsB,UAA1B,EAAsC;AACpC,aAAOA,WACLd,aAAa,EAAb,EAAiBiB,IAAjB,EAAuB;AACrBD;AADqB,OAAvB,CADK,CAAP;AAKD;;AAED,QAAME,MAAMJ,UAAZ;AACA,QAAIK,aAAaF,KAAKD,QAAL,IAAiBA,QAAlC;AACAG,iBAAaC,MAAMC,OAAN,CAAcF,UAAd,IAA4BA,UAA5B,GAAyC,CAACA,UAAD,CAAtD;AACA,QAAIf,eAAeU,UAAf,CAAJ,EAAgC;AAC9B,UAAIQ,WAAW,EAAf;AACA,UAAIC,cAAc,EAAlB;AACA,UAAIN,KAAKO,IAAT,EAAe;AACb;AACAF,mBAAWL,KAAKO,IAAhB;AACD,OAHD,MAGO;AACL;AACAF,mBAAWL,KAAKQ,IAAL,IAAaR,IAAxB;AACAM,oBAAYG,YAAZ,GAA2B;AACzBD,gBAAMR,KAAKQ,IADc;AAEzBb,mBAASK,KAAKL;AAFW,SAA3B;AAID;AACD,UAAMe,QAAQ3B,aAAa,EAAb,EAAiBsB,QAAjB,EAA2BC,WAA3B,CAAd;AACAN,aAAO,EAACU,YAAD,EAAP;AACD;;AAED,WAAOhB,cAAcO,GAAd,EAAmBD,IAAnB,EAAyBE,UAAzB,CAAP;AACD,GAhCD;;AAD2C,wBAmCChB,eAAeU,UAAf,CAnCD;AAAA,MAmCpCe,kBAnCoC,mBAmCpCA,kBAnCoC;AAAA,MAmChBC,aAnCgB,mBAmChBA,aAnCgB;;AAqC3C,SAAO3B,cAAcW,UAAd,EAA0BD,OAA1B,EAAmCgB,kBAAnC,EAAuDC,aAAvD,CAAP;AACD;;AAEDC,OAAOC,OAAP,GAAiBrB,WAAjB","file":"blocksToVue.js","sourcesContent":["const objectAssign = require('object-assign')\nconst {blocksToNodes} = require('@sanity/block-content-to-hyperscript/internals')\nconst getSerializers = require('./serializers')\n\nconst isVueComponent = block =>\n  Object.hasOwnProperty.call(block, 'template') ||\n  (Object.hasOwnProperty.call(block, 'render') && typeof block.render === 'function')\n\nfunction blocksToVue(createElement, options) {\n  const renderNode = (serializer, properties, children) => {\n    let data = properties || {}\n    if (typeof serializer === 'function') {\n      return serializer(\n        objectAssign({}, data, {\n          children\n        })\n      )\n    }\n\n    const tag = serializer\n    let childNodes = data.children || children\n    childNodes = Array.isArray(childNodes) ? childNodes : [childNodes]\n    if (isVueComponent(serializer)) {\n      let vueProps = {}\n      let sanityProps = {}\n      if (data.mark) {\n        // If rendering a mark, we just pass the mark properties\n        vueProps = data.mark\n      } else {\n        // If rendering a node, also pass options and original node\n        vueProps = data.node || data\n        sanityProps._sanityProps = {\n          node: data.node,\n          options: data.options\n        }\n      }\n      const props = objectAssign({}, vueProps, sanityProps)\n      data = {props}\n    }\n\n    return createElement(tag, data, childNodes)\n  }\n\n  const {defaultSerializers, serializeSpan} = getSerializers(renderNode)\n\n  return blocksToNodes(renderNode, options, defaultSerializers, serializeSpan)\n}\n\nmodule.exports = blocksToVue\n"]}